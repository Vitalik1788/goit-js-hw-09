{"mappings":"kjBAGMA,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,WAAYF,SAASC,cAAc,gBACnCE,UAAWH,SAASC,cAAc,eAClCG,YAAaJ,SAASC,cAAc,iBACpCI,SAAUL,SAASC,cAAc,WAGnC,SAASK,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAIPV,EAAKC,KAAKiB,iBAAiB,UAE3B,SAAyBC,GACvBA,EAAMC,iBAMN,IAJA,IAAMC,EAAQC,OAAOtB,EAAKI,WAAWmB,OAC/BC,EAAOF,OAAOtB,EAAKK,UAAUkB,OAC7BE,EAASH,OAAOtB,EAAKM,YAAYiB,OAE9BG,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAAG,CAGlClB,EAAckB,EAFOL,EAAQG,EAAOE,GAGjCC,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MACjBmB,EAAAC,GAASC,OAAOC,QACd,qBAAoCC,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,M,IAG7CwB,OAAM,SAAAN,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MAClBmB,EAAAC,GAASC,OAAOI,QACd,oBAAmCF,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import 'flatpickr/dist/flatpickr.min.css';\nimport Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  inputDelay: document.querySelector('[name=delay]'),\n  inputStep: document.querySelector('[name=step]'),\n  inputAmount: document.querySelector('[name=amount]'),\n  startBtn: document.querySelector('button'),\n};\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nrefs.form.addEventListener('submit', onPromiseCreate);\n\nfunction onPromiseCreate(event) {\n  event.preventDefault();\n\n  const delay = Number(refs.inputDelay.value);\n  const step = Number(refs.inputStep.value);\n  const amount = Number(refs.inputAmount.value);\n\n  for (let i = 0; i < amount; i += 1) {\n    const promiseDelay = delay + step * i;\n\n    createPromise(i, promiseDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    }\n};\n"],"names":["$ce04d3a99e08e73b$var$refs","form","document","querySelector","inputDelay","inputStep","inputAmount","startBtn","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","delay1","Number","value","step","amount","i","then","param","$parcel$interopDefault","$6JpON","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.5f61a473.js.map"}